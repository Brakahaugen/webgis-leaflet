{"version":3,"sources":["components/Processing/geoProcessSelect.js","components/Processing/intersectProcess.js","components/Processing/Snackbar.js","components/Processing/ProcessForm.js","components/Processing/unionProcess.js","components/Processing/bufferProcess.js","components/Processing/simplifyProcess.js","components/Processing/clipProcess.js","components/Processing/differenceProcess.js","components/SideDrawer/DrawerToggleButton.js","components/Generation/CreateLayerMenu.js","components/Toolbar/Toolbar.js","components/LayerList/LayerListElement.js","components/LayerList/changeDisplay.js","components/CustomContext/ContextMenu.js","components/LayerList/LayerList.js","components/Backdrop/Backdrop.js","Map/index.js","components/DragAndDrop.js","components/DropZone.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","button","display","marginTop","spacing","formControl","margin","minWidth","ControlledOpenSelect","initialParam","type","layers","tools","setParentValue","classes","React","useState","value","setValue","open","setOpen","autoComplete","FormControl","className","InputLabel","htmlFor","Select","onClose","onOpen","onChange","event","target","inputProps","name","MenuItem","map","item","index","alert","layer","_leaflet_id","createIntersect","input","toggleSnack","features1","features2","console","log","pieces","eachLayer","feature","geometry","push","coordinates","c","turf","forEach","poly","intersections","f1","f2","conflict","intersect","JSON","stringify","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","message","alignItems","MySnackbarContentWrapper","props","variant","other","Icon","SnackbarContent","clsx","aria-describedby","id","action","IconButton","key","aria-label","color","onClick","SimpleSnackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","this","toggleSnackbar","msgType","msg","Component","floodColor","ProcessForm","handleClickOpen","setState","String","snackbar","snackbarMsg","snackbarType","handleClose","state","selectedTool","setTool","selectedToolIndex","setParam","param","param1","param2","setParam2","setNumberParam","numberParameter","displaySnackbar","doProcess","tool","json1","json2","dist","file","features","union","createUnion","collection","buffered","units","createBuffer","tol","options","tolerance","highQuality","simplified","createSimplify","mask","inputType","inputCollection","clipMask","fail","intersectProcess","splits","line","lineSegment","linePoint","lineCoordinates","length","createClip","diff","difference","candidate","anyLuck","diffPoly","d","intersection","createDifference","handleNewFile","parameters","selector","numberParameterText","DialogContentText","style","typeText","Input","placeholder","Button","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogActions","drawerToggleButton","click","CreateLayerMenu","handleClick","handleOpen","e","text","toggleCreateMode","handleSelect","toolbar","drawerClickHandler","createLayerMode","root","width","height","maxWidth","background","paper","DisplayDialog","newColor","changeColor","changeName","handleNameChange","subFields","i","subTexts","TextField","autoFocus","fullWidth","paddingTop","marginLeft","undefined","hex","setStyle","weight","dashArray","fillOpacity","fillColor","getItemStyle","isDragging","draggableStyle","borderRadius","LayerList","onZoomToLayer","changeDisplay","items","selectedIndex","displayDialog","disableDrag","onDragEnd","bind","prevProps","result","destination","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","orderLayers","visibility","visibilityOff","droppableId","provided","snapshot","RootRef","rootRef","innerRef","Paper","maxHeight","overflow","List","_","isDraggingOver","border","draggableId","ListItem","selected","handleListItemClick","onContextMenu","rightClick","ContainerComponent","ContainerProps","ref","draggableProps","dragHandleProps","ListItemText","ListItemIcon","toggleVisibility","onDelete","zIndex","heading","ListItemSecondaryAction","backdrop","Wrapper","styled","div","Map","createdLayer","componentDidMount","L","center","zoom","zoomControl","tileLayer","detectRetina","maxZoom","maxNativeZoom","on","addLayer","clickCreateLayer","componentDidUpdate","clickedPoints","removeLayer","latlng","reverse","createLayer","newLayer","polyline","addTo","polygon","resetFile","deletedLayer","hide","unhide","zoomTo","fitBounds","getBounds","resetZoom","zoomToFeature","onEachFeature","hideLayer","geojsonData","geoj","geoJSON","pointToLayer","circleMarker","radius","Math","floor","random","toString","setZIndex","bindPopup","MyDropzone","onDrop","useCallback","acceptedFiles","reader","FileReader","onabort","onerror","onload","binaryStr","jsonLayer","parse","readAsBinaryString","useDropzone","getRootProps","getInputProps","isDragActive","position","textAlign","boxShadow","App","sideDrawerOpen","deletedLayers","drawerToggleClickHandler","prevState","openGeoProcess","backdropClickHandler","handleDelete","itemId","layerToDelete","filter","l","existingLayer","find","_layers","_svgSize","lat","lng","resetHighlight","zoomToLayer","highlightFeature","selectLayer","newLayers","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad93c8b7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\n//params:\r\n// type: The type of selector\r\n// layers: the layers we have at disposal\r\n// tools: the tools we have at disposal.\r\n// typeText: The text associated with the type of selector\r\nexport default function ControlledOpenSelect({initialParam, type, layers, tools, setParentValue}) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(initialParam);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  \r\n  const handleChange = event => {\r\n    setValue(event.target.value);\r\n    setParentValue(event.target.value)\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form autoComplete=\"off\">\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"selector\">{type}</InputLabel>\r\n          <Select\r\n            open={open}\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            value={value}\r\n            onChange={handleChange}\r\n            inputProps={{\r\n              name: 'value',\r\n            }}\r\n          >\r\n            <MenuItem value=\"-1\">\r\n              <em>None</em>\r\n            </MenuItem>\r\n\r\n            {type == 'tools'? tools? tools.map((item, index) => (\r\n                <MenuItem value={index}>\r\n                  <em>{item}</em>\r\n                </MenuItem>\r\n            ))\r\n            : alert(\"Something went horribly wrong\")\r\n            : layers? layers.map((item, index) => (\r\n                <MenuItem value={index}>\r\n                  <em>{item.layer.name? item.layer.name: item.layer._leaflet_id}</em>\r\n                </MenuItem>\r\n            )) \r\n            : alert(\"No \" + {layers} + \r\n            \" to process... Add a layer by dragging it into the left column.\")}\r\n\r\n          </Select>\r\n        </FormControl>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import * as turf from '@turf/turf';\r\nimport L from 'leaflet';\r\n\r\n\r\nexport default function createIntersect(input, toggleSnack) {\r\n\r\n    //Extract all single features. Must be polygons TODO: add a question if it is polygon or not:\r\n    var features1 = []\r\n    var features2 = []\r\n\r\n    console.log(input)\r\n    try {\r\n    var pieces = []\r\n    input[0].layer.eachLayer(layer => {    \r\n        //Puts a minimal buffer around the feature to make a polygon of it. \r\n        //Turf requires polygons for the intersection operator.\r\n        if ((layer.feature.geometry.type == \"Polygon\")) {\r\n            features1.push(layer.feature)\r\n        } else if (layer.feature.geometry.type == \"MultiPolygon\") {\r\n            //split up multipolygon and add it to a a feature list.\r\n            pieces.push(layer.feature.geometry.coordinates.map(c => turf.polygon(c)))\r\n\r\n        } else {\r\n            toggleSnack(\"...Invalid geometry-types!\", \"error\")\r\n            return null\r\n        }\r\n    });\r\n    pieces.forEach((poly) => {\r\n        console.log(poly[0])\r\n        features1.push(poly[0])\r\n    })\r\n    pieces = []\r\n\r\n    input[1].layer.eachLayer(layer => {    \r\n        //Puts a minimal buffer around the feature to make a polygon of it. \r\n        //Turf requires polygons for the intersection operator.\r\n        if ((layer.feature.geometry.type == \"Polygon\") || (layer.feature.geometry.type == \"MultiPolygon\")) {\r\n            features2.push(layer.feature)\r\n        } else if (layer.feature.geometry.type == \"MultiPolygon\") {\r\n            //split up multipolygon and add it to a a feature list.\r\n            pieces.push(layer.feature.geometry.coordinates.map(c => turf.polygon(c)))\r\n\r\n        } else {\r\n            toggleSnack(\"...Invalid geometry-types!\", \"error\")\r\n            return null\r\n        }\r\n    });\r\n    pieces.forEach((poly) => {\r\n        console.log(poly[0])\r\n        features2.push(poly[0])\r\n    })\r\n    \r\n    } catch {\r\n        toggleSnack(\"something went wrong while loading the layers. Check your inputs before trying again...\", \"error\")\r\n    }\r\n\r\n    //For all features, find the intersection with all features. Computationnally extremely costly.\r\n    var intersections = []    \r\n    console.log(features2)\r\n    console.log(features1)\r\n    // try {\r\n    //     features1.forEach(f1 => {\r\n    //         features2.forEach(f2 => {\r\n    //             var conflict = null;\r\n    //                 try {\r\n    //                     console.log(f1)\r\n    //                     console.log(f2)\r\n    //                     conflict = turf.intersect(f1, f2)\r\n    //                 } catch {\r\n    //                     console.log(\"WTF why you no work\")\r\n    //                 }\r\n    //             // }\r\n    //             if (conflict !== null) {\r\n    //                 intersections.push(conflict);\r\n    //             }   \r\n    //         })\r\n    //     })\r\n    //     console.log(intersections)\r\n    // } catch {\r\n        console.log(\"did not intersect properly\")\r\n        try {\r\n            features1.forEach(f1 => {\r\n                features2.forEach(f2 => {\r\n                    var conflict = null;\r\n                    // try {\r\n                    //     conflict = turf.intersect(f1,f2);\r\n                    // } catch {\r\n                        try {\r\n                            conflict = turf.difference(f1, turf.difference(f1, f2))\r\n                        } catch {\r\n                        }\r\n                    // }\r\n                    if (conflict !== null) {\r\n                        intersections.push(conflict);\r\n                    }   \r\n                })\r\n            })\r\n        } catch {\r\n            toggleSnack(\"Could not generate the intersection. Contact your highest superior\", \"error\")\r\n            return null\r\n        }\r\n    // }\r\n    \r\n\r\n\r\n\r\n    let name = \"new_\"\r\n    if (input[0].layer.name) {\r\n        name = input[0].layer.name\r\n    }\r\n\r\n    var intersect = {\r\n        \"type\": \"FeatureCollection\",\r\n        \"name\": name + \" intersection\",\r\n        \"features\": intersections,\r\n    } \r\n\r\n    console.log(intersect)\r\n    console.log(JSON.stringify(intersect))\r\n\r\n    return intersect\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles1();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\nexport default class SimpleSnackbar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n  return (\r\n\r\n  <div>\r\n    <Snackbar \r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n      }}\r\n      autoHideDuration={8000}\r\n      open={this.props.open}\r\n      onClose={this.props.toggleSnackbar}\r\n    >\r\n\r\n    <MySnackbarContentWrapper\r\n      onClose={this.props.toggleSnackbar}\r\n      variant={this.props.msgType}\r\n      message={this.props.msg}\r\n    />\r\n    </Snackbar>\r\n  </div>\r\n  );}\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ControlledOpenSelect from './geoProcessSelect'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport createBuffer from './bufferProcess';\r\nimport createUnion from './unionProcess';\r\nimport createIntersect from './intersectProcess';\r\nimport createSimplify from './simplifyProcess';\r\nimport createDifference from './differenceProcess';\r\nimport Input from '@material-ui/core/Input';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { create } from 'domain';\r\nimport { IconButton, Snackbar } from '@material-ui/core';\r\nimport SimpleSnackbar from './Snackbar'\r\nimport preProcess from \"./preProcess.js\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport createClip from './clipProcess';\r\n\r\n\r\n\r\nconst classes = makeStyles(theme => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n    color: 'white',\r\n    floodColor: 'black'\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nexport default class ProcessForm extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        layers: this.props.layers,\r\n        selectedToolIndex: -1,\r\n        open: false,\r\n        tools: ['UNION', 'BUFFER', 'INTERSECT', 'SIMPLIFY', \"CLIP\", \"DIFFERENCE\"],\r\n        parameters: [],\r\n        param1: null,\r\n        param2: null,\r\n        numberParameter: 0.001,\r\n        snackbar: false,\r\n        snackbarMsg: \"\",\r\n        snackbarType: \"\",\r\n      };  \r\n    }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true\r\n    });    \r\n  };\r\n\r\n  toggleSnackbar = (msg, type) => {\r\n    if ((typeof msg === 'string' || msg instanceof String) && (typeof type === 'string' || type instanceof String)) {\r\n      console.log(msg)\r\n      console.log(type)\r\n      this.setState({\r\n        snackbar: true,\r\n        snackbarMsg: msg,\r\n        snackbarType: type,\r\n      })\r\n    } else if (type !== \"clickaway\") {\r\n      //Hmmm....\r\n      this.setState({\r\n        snackbar: false,\r\n        snackbarMsg: \"\",\r\n        snackbarType: \"\",\r\n      })\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    console.log(this.state.selectedTool)\r\n    console.log(this.props.layers)\r\n    this.setState({\r\n      open: false\r\n    });    \r\n  };\r\n\r\n\r\n  setTool = (value) => {\r\n    this.setState({\r\n      selectedToolIndex: value,\r\n    });        \r\n  }\r\n\r\n  setParam = (param) => {\r\n    if (this.state.param1 == param) {\r\n      console.log(\"samesies\")\r\n      return \r\n    } else if (this.state.param2 == param) {\r\n      this.toggleSnackbar(\"You must choose two differen't layers\", \"warning\")\r\n    }\r\n    this.setState({\r\n      param1: param\r\n    })\r\n  }\r\n\r\n  setParam2 = (param) => {\r\n    if (this.state.param2 == param) {\r\n      console.log(\"samesies\")\r\n      return \r\n    } else if (this.state.param1 == param) {\r\n      this.toggleSnackbar(\"You must choose two differen't layers\", \"warning\")\r\n    }\r\n    this.setState({\r\n      param2: param\r\n    })\r\n  }\r\n\r\n  setNumberParam = (param) => {\r\n    this.setState({\r\n      numberParameter: param.target.value,\r\n    })\r\n    console.log(param.target.value)\r\n  }\r\n\r\n  displaySnackbar = () => {\r\n    let snackbar = ( \r\n      <SimpleSnackbar\r\n        open={this.state.snackbar}\r\n        toggleSnackbar={this.toggleSnackbar}\r\n        msgType={this.state.snackbarType ? this.state.snackbarType: \"success\"}//success, warning, error, info\r\n        msg={this.state.snackbarMsg ? this.state.snackbarMsg: \"hello\"}//Input: string of mesage\r\n      />)      \r\n\r\n    console.log(snackbar)\r\n    return snackbar\r\n  }\r\n\r\n  doProcess = () => {\r\n    let tool = this.state.tools[this.state.selectedToolIndex]\r\n    let json1 = this.props.layers[this.state.param1]\r\n    let json2 = this.props.layers[this.state.param2]\r\n    let dist = this.state.numberParameter\r\n    let file = null;\r\n\r\n    switch(tool) {\r\n      case \"UNION\":\r\n        file = createUnion([json1, json2], dist, this.toggleSnackbar)\r\n        break;\r\n\r\n      case \"BUFFER\":\r\n        file = createBuffer(json1, dist, this.toggleSnackbar)\r\n        break;\r\n\r\n      case \"INTERSECT\":\r\n        file = createIntersect([json1, json2], this.toggleSnackbar)\r\n        break;\r\n\r\n      case \"SIMPLIFY\":\r\n        file = createSimplify(json1, dist, this.toggleSnackbar)\r\n        break;\r\n        \r\n      case \"CLIP\":\r\n        file = createClip(json1, json2, this.toggleSnackbar)\r\n      break;\r\n\r\n      case \"DIFFERENCE\":\r\n        file = createDifference([json1, json2], this.toggleSnackbar)\r\n      break;\r\n\r\n    }\r\n    if (file != null) {\r\n      this.props.handleNewFile(file);\r\n      this.toggleSnackbar(\"...Success!\", \"success\")\r\n    }\r\n\r\n    this.setState({\r\n      open: false,\r\n      param1: null,\r\n      param2: null,\r\n      numberParameter: 0.001,\r\n    });    \r\n  }\r\n  \r\n  render() {\r\n\r\n    let selector;\r\n    let numberParameter;\r\n    let numberParameterText;\r\n\r\n    switch(this.state.selectedToolIndex) {\r\n      case -1: //Not a single tool selected.\r\n        break;\r\n      \r\n        case 0: //Union\r\n        selector = \r\n          <div>\r\n            <DialogContentText>\r\n              {'Choose the layers you want to find the union of.'} \r\n            </DialogContentText>\r\n\r\n            <div style={{display: \"flex\"}}>\r\n            <ControlledOpenSelect \r\n              setParentValue={this.setParam}\r\n              initialParam={-1} \r\n              tools={this.state.tools} \r\n              layers={this.props.layers} \r\n              type={'1st Input layer'} \r\n            />\r\n\r\n            <ControlledOpenSelect \r\n              setParentValue={this.setParam2}\r\n              initialParam={-1} \r\n              tools={this.state.tools} \r\n              layers={this.props.layers} \r\n              type={'2nd Input layer'} \r\n            />\r\n            </div>\r\n        </div>\r\n        break;\r\n\r\n      case 1: //BUFFER\r\n        selector = <ControlledOpenSelect \r\n          setParentValue={this.setParam}\r\n          initialParam={-1} \r\n          tools={this.state.tools} \r\n          layers={this.props.layers} \r\n          type={'Input'} \r\n          typeText={'Choose the layer you want to make a buffer around.'} \r\n        />\r\n        numberParameter = <Input\r\n          onChange={this.setNumberParam}\r\n          placeholder=\"Buffer distance (km)\"\r\n          inputProps={{\r\n            'aria-label': 'description',\r\n          }}\r\n        />\r\n        numberParameterText = <DialogContentText>\r\n          {\"Insert the buffer distance. In kilometres\"}\r\n        </DialogContentText>\r\n        break;\r\n      \r\n      case 2: //Intersect \r\n        selector = \r\n          <div>\r\n            <DialogContentText>\r\n              {'Choose the layers you want to find the intersection of.'} \r\n            </DialogContentText>\r\n\r\n            <div style={{display: \"flex\"}}>\r\n            <ControlledOpenSelect \r\n              setParentValue={this.setParam}\r\n              initialParam={-1} \r\n              tools={this.state.tools} \r\n              layers={this.props.layers} \r\n              type={'1st Input layer'} \r\n            />\r\n\r\n            <ControlledOpenSelect \r\n              setParentValue={this.setParam2}\r\n              initialParam={-1} \r\n              tools={this.state.tools} \r\n              layers={this.props.layers} \r\n              type={'2nd Input layer'} \r\n            />\r\n            </div>\r\n        </div>\r\n        break;\r\n\r\n      case 3: //Simplify \r\n        selector = \r\n          <div>\r\n            <DialogContentText>\r\n              {'Choose the layer you want to simplify.'} \r\n            </DialogContentText>\r\n\r\n            <div style={{display: \"flex\"}}>\r\n            <ControlledOpenSelect \r\n              setParentValue={this.setParam}\r\n              initialParam={-1} \r\n              tools={this.state.tools} \r\n              layers={this.props.layers} \r\n              type={'Input layer'} \r\n            />\r\n            </div>\r\n        </div>\r\n\r\n        numberParameter = \r\n          <Input\r\n            onChange={this.setNumberParam}\r\n            placeholder=\"Default 0.001\"\r\n            inputProps={{\r\n              'aria-label': 'description',\r\n            }}\r\n          />\r\n\r\n      numberParameterText = \r\n        <DialogContentText>\r\n          {\"Insert tolerance factor. Must be higher than 0.\"}\r\n        </DialogContentText>\r\n      break;\r\n\r\n      case 4: //CLIP \r\n        selector = \r\n          <div>\r\n            <DialogContentText>\r\n              {'Choose the layer you want to clip.'} \r\n            </DialogContentText>\r\n\r\n            <div style={{display: \"flex\"}}>\r\n            <ControlledOpenSelect \r\n              setParentValue={this.setParam}\r\n              initialParam={-1} \r\n              tools={this.state.tools} \r\n              layers={this.props.layers} \r\n              type={'Input line-layer'} \r\n            />\r\n            <ControlledOpenSelect \r\n              setParentValue={this.setParam2}\r\n              initialParam={-1} \r\n              tools={this.state.tools} \r\n              layers={this.props.layers} \r\n              type={'clip on polygon:'} \r\n            />\r\n            </div>\r\n        </div>\r\n      break;\r\n\r\n      case 5: //DIFFERENCE\r\n        selector = \r\n          <div>\r\n            <DialogContentText>\r\n              {'Choose the layer and the layer you want to remove.'} \r\n            </DialogContentText>\r\n\r\n            <div style={{display: \"flex\"}}>\r\n            <ControlledOpenSelect \r\n              setParentValue={this.setParam}\r\n              initialParam={-1} \r\n              tools={this.state.tools} \r\n              layers={this.props.layers} \r\n              type={'Input'} \r\n            />\r\n            <ControlledOpenSelect \r\n              setParentValue={this.setParam2}\r\n              initialParam={-1} \r\n              tools={this.state.tools} \r\n              layers={this.props.layers} \r\n              type={'Minus this layer:'} \r\n            />\r\n            </div>\r\n        </div>\r\n      break;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={this.handleClickOpen}\r\n        ><BuildIcon />Geoprocess</Button>\r\n        <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n          <DialogTitle id=\"form-dialog-title\">Processing Tools</DialogTitle>\r\n          <DialogContent>\r\n          <DialogContentText>\r\n            {'Choose the tool you want to use'}\r\n          </DialogContentText>\r\n            <ControlledOpenSelect \r\n            initialParam={this.state.selectedToolIndex}\r\n            setParentValue={this.setTool} \r\n            tools={this.state.tools} \r\n            type={'tools'} \r\n            />\r\n            {selector}\r\n            {numberParameterText}\r\n            {numberParameter}\r\n        </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.doProcess} color=\"primary\">\r\n              Process\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {this.state.snackbar ? this.displaySnackbar(): \"\"}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}","import * as turf from '@turf/turf';\r\nimport L from 'leaflet';\r\n\r\n\r\nexport default function createUnion(input, toggleSnack) {\r\n    console.log(input)\r\n    try {\r\n    //Extract all single features. Must be polygons\r\n    var features = []\r\n    input.forEach(param => {\r\n        console.log(param)    \r\n            param.layer.eachLayer(function (layer) {\r\n                features.push(layer.feature)\r\n            });\r\n        });\r\n    } catch {\r\n        toggleSnack(\"Inputs are not valid...\", \"error\")\r\n        return\r\n    }\r\n    \r\n    try {\r\n    //Do the operations on all polygons\r\n    var union = turf.union(...features)\r\n    union.name =  input[0].layer.name + \" + \" + input[1].layer.name\r\n    return union\r\n    } catch {\r\n        toggleSnack(\"something went wrong while loading the layers. Check your inputs before trying again...\", \"error\")\r\n        return null\r\n    }\r\n}\r\n","import * as turf from '@turf/turf';\r\nimport L from 'leaflet';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport React from 'react';\r\n\r\nexport default function createBuffer(input, dist, toggleSnack) {\r\n  \r\n\r\n\r\n  toggleSnack(\"Validating input...\", \"info\")\r\n  try {\r\n    var collection = {\r\n      \"type\": \"FeatureCollection\",\r\n      \"features\": [],\r\n    } \r\n\r\n    console.log(input)\r\n    console.log(input.layer)\r\n\r\n\r\n    input.layer.eachLayer(function (layer) {\r\n      console.log(layer)\r\n      console.log(layer.feature)\r\n      collection.features.push(layer.feature)\r\n    });\r\n    toggleSnack(\"Validation complete. Continuing with buffer-operation...\", \"info\")\r\n    \r\n  } catch {\r\n    toggleSnack(\"something went wrong while loading the layers. Check your inputs before trying again...\", \"error\")\r\n    return null\r\n  }\r\n\r\n  try {\r\n    var buffered = turf.buffer(\r\n      collection,\r\n      dist,\r\n      {units: \"kilometers\"},\r\n    )\r\n    buffered.name =  input.layer.name + \" \" + dist + \"km_buffer\"\r\n    console.log(buffered)\r\n    return buffered;\r\n      \r\n  } catch {\r\n\r\n    toggleSnack(\"Could not generate the buffer. Contact your highest superior\", \"error\")\r\n    return null;\r\n  }\r\n}\r\n","import * as turf from '@turf/turf';\r\nimport L from 'leaflet';\r\n\r\n\r\nexport default function createSimplify(input, tol, toggleSnack) {\r\n\r\n  try {\r\n  //Creating a simple featurecollection in geojson,\r\n  //and populating by the features from the leaflet layers.\r\n  var collection = {\r\n    \"type\": \"FeatureCollection\",\r\n    \"name\": \"simplified\" + tol + input.layer.name,\r\n    \"features\": [],\r\n  } \r\n  input.layer.eachLayer(function (layer) {\r\n    collection.features.push(layer.feature)\r\n  });\r\n  } catch {\r\n    toggleSnack(\"something went wrong while loading the layers. Check your inputs before trying again...\", \"error\")\r\n  }\r\n\r\n  try {\r\n    var options = {tolerance: tol, highQuality: false};\r\n    var simplified = turf.simplify(\r\n      collection,\r\n      options\r\n    )\r\n    console.log((simplified));\r\n    return simplified;\r\n    \r\n  } catch {\r\n    toggleSnack(\"Could not generate the simplified layer. Contact your highest superior\", \"error\")\r\n    return null;\r\n  }\r\n}\r\n","import * as turf from '@turf/turf';\r\nimport L from 'leaflet';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport React from 'react';\r\nimport { fail } from 'assert';\r\nimport intersectProcess from './intersectProcess'\r\n\r\nexport default function createClip(input, mask, toggleSnack) {\r\n  \r\n \r\n  toggleSnack(\"Validating input...\", \"info\")\r\n  try {\r\n    var inputCollection = {\r\n      \"type\": \"FeatureCollection\",\r\n      \"name\":  input.layer.name + \"_clipped\",\r\n      \"features\": [],\r\n    }\r\n\r\n    console.log(input)\r\n    console.log(input.layer)\r\n    var inputType;\r\n    //parsing the input\r\n    input.layer.eachLayer(function (layer) {\r\n      inputType = layer.feature.geometry.type;\r\n      console.log(layer)\r\n      console.log(layer.feature.geometry.type)\r\n      console.log(inputCollection)\r\n      inputCollection.features.push(layer.feature)\r\n      console.log(inputCollection)\r\n    });\r\n    console.log(\"Done with the inputs\")\r\n    //parsing the mask\r\n    var clipMask = null\r\n\r\n    console.log(clipMask)\r\n    mask.layer.eachLayer(function (layer) {\r\n      var inputType = layer.feature.geometry.type;\r\n      console.log(layer)\r\n      console.log(layer.feature.geometry.type)\r\n      if (inputType != \"Polygon\") {\r\n        fail();\r\n      }\r\n      clipMask = layer.feature\r\n    });\r\n\r\n\r\n\r\n    toggleSnack(\"Validation complete. Continuing with buffer-operation...\", \"info\")\r\n    \r\n  } catch {\r\n    toggleSnack(\"something went wrong while loading the layers. Check your inputs before trying again...\", \"error\")\r\n    return null\r\n  }\r\n\r\n  //Starting with the process.\r\n  if (inputType == \"Point\") {\r\n    return turf.pointsWithinPolygon(inputCollection, clipMask);\r\n  } else if (inputType == \"Polygon\") {\r\n    return intersectProcess([input, mask], toggleSnack)\r\n  } else if (inputType == \"LineString\") {\r\n\r\n    var splits = []\r\n    //Split each line on intersections of a polygon\r\n    //Splitt hver linje når den treffer et polygon:\r\n    inputCollection.features.forEach((line) => {\r\n\r\n      var split = turf.lineSplit(line, clipMask)\r\n\r\n      //For each of these linesegments check if they are inside the polygon:  \r\n      //For hvert linjesegment sjekk om den er innenfor eller utenfor polygonet ved bruk av punktene.\r\n      split.features.forEach((lineSegment) => {\r\n        var lineCoordinates = lineSegment.geometry.coordinates;\r\n        var linePoint;\r\n\r\n        //Hvis linjesegmentet er rett og kun definert av start og slutt, bruk midtpunkt av linjen\r\n        if (lineCoordinates.length == 2 ) {\r\n            linePoint = turf.center(lineSegment);         \r\n            //Hvis ikke; sjekk om det 2 punktet som definerer linjen er innenfor.              \r\n        } else {\r\n            linePoint = turf.point(lineCoordinates[1]);\r\n        }\r\n\r\n        //Hvis punktet er innenfor polygonet returnerer det en liste større enn 0:\r\n        if(turf.pointsWithinPolygon(linePoint, clipMask).features.length > 0) {\r\n          //legger derfor til linjesegmentet som er innenfor polygonet.\r\n            splits.push(lineSegment)\r\n        }\r\n      })\r\n    })\r\n    inputCollection.features = splits\r\n    return inputCollection\r\n  }\r\n\r\n}","import * as turf from '@turf/turf';\r\nimport createIntersect from './intersectProcess'\r\nimport L from 'leaflet';\r\n\r\n\r\nexport default function createDifference(input, toggleSnack) {\r\n    console.log(input)\r\n    try {\r\n\r\n        var main = []\r\n        var diff = []\r\n\r\n        input[0].layer.eachLayer(function (layer) {\r\n            if (layer.feature.geometry.type == \"MultiPolygon\") {\r\n                main.push(layer.feature.geometry.coordinates.map(c => turf.polygon(c)))\r\n            } \r\n            main.push(layer.feature)\r\n        });\r\n        input[1].layer.eachLayer(function (layer) {\r\n            if (layer.feature.geometry.type == \"MultiPolygon\") {\r\n                diff.push(layer.feature.geometry.coordinates.map(c => turf.polygon(c)))\r\n            } \r\n            diff.push(layer.feature)\r\n        });\r\n        \r\n    } catch {\r\n        toggleSnack(\"Inputs are not valid...\", \"error\")\r\n        return\r\n    }\r\n    \r\n    try {\r\n    //Do the operations on all polygons\r\n    console.log(main)\r\n    console.log(diff)\r\n\r\n    var difference = {\r\n        \"type\": \"FeatureCollection\",\r\n        \"name\": input[0].layer.name + \"_diff_\" + input[1].layer.name,\r\n        \"features\": [],\r\n      }\r\n\r\n\r\n    main.forEach(poly => {\r\n\r\n        var candidate = poly\r\n        var anyLuck = false;\r\n\r\n        diff.forEach(diffPoly => {\r\n            var d = turf.difference(poly, diffPoly)\r\n            if (d != null) {\r\n                var intersection = turf.intersect(d, candidate);\r\n                //if intersection led to results:\r\n                if (intersection != null) {\r\n                    candidate = intersection\r\n                    anyLuck = true;\r\n                }\r\n            }\r\n        })\r\n        if (anyLuck) {\r\n            difference.features.push(candidate)\r\n        }\r\n    })\r\n    \r\n    \r\n    \r\n\r\n    console.log(difference)\r\n\r\n    toggleSnack(\"erased \" + input[1].layer.name + \" from \" + input[0].layer.name, \"success\")\r\n    return difference\r\n    } catch {\r\n        toggleSnack(\"something went wrong while loading the layers. Check your inputs before trying again...\", \"error\")\r\n        return null\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport './DrawerToggleButton.css';\r\n\r\nconst drawerToggleButton = props => (\r\n    <button className=\"toggle-button\" onClick={props.click}>\r\n        <div className=\"toggle-button__line\" />\r\n        <div className=\"toggle-button__line\" />\r\n        <div className=\"toggle-button__line\" />\r\n    </button>\r\n);\r\n\r\nexport default drawerToggleButton;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Input from '@material-ui/core/Input';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\nimport { create } from 'domain';\r\nimport { IconButton, Snackbar } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\n\r\n\r\nconst classes = makeStyles(theme => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n    color: 'white',\r\n    floodColor: 'black'\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nexport default class CreateLayerMenu extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        open: false,\r\n        icon: <AddIcon>kjøasdf</AddIcon>,\r\n        text: \"create new layer\",\r\n        color: \"primary\",\r\n        type: \"Polygon\",\r\n        // snackbarMsg: \"\",\r\n        // snackbarType: \"\",\r\n      };  \r\n    }\r\n\r\n  handleClick = () => {\r\n    if (this.state.open) {\r\n      this.handleClose()\r\n    } else {\r\n      this.handleOpen()\r\n    }\r\n  }\r\n\r\n  handleOpen = (e = \"Polygon\") => {\r\n    this.setState({\r\n      open: true,\r\n      icon: <SaveIcon />,\r\n      text: \"Save layer\",\r\n      color: \"default\",\r\n    });    \r\n    this.props.toggleCreateMode(e)\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n      icon: <AddIcon />,\r\n      text: \"create new layer\",\r\n      color: \"primary\",\r\n    });   \r\n    this.props.toggleCreateMode(false)\r\n  };\r\n\r\n  handleSelect = event => {\r\n    console.log(event.target.value)\r\n    this.props.toggleCreateMode(event.target.value)\r\n    this.setState({\r\n      type: event.target.value\r\n    });  \r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div style={{spacing: 50}}>\r\n        {this.state.open ? \r\n          <Select\r\n            value={this.state.type}\r\n            onChange={this.handleSelect}\r\n          >\r\n            <MenuItem value={\"LineString\"}>LineString</MenuItem>\r\n            <MenuItem value={\"Polygon\"}>Polygon</MenuItem>\r\n            <MenuItem value={\"B\"}>BBox</MenuItem>\r\n\r\n          </Select>\r\n          : \"\"}\r\n{/*           \r\n        {this.state.open ? \r\n          <Button\r\n            variant=\"contained\"\r\n            color={this.state.color}\r\n            className={classes.button}\r\n            onClick={this.handleClose(\"quit\")}\r\n          >\r\n            <CloseIcon />\r\n          </Button>: \"\"} */}\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color={this.state.color}\r\n          className={classes.button}\r\n          onClick={this.handleClick}\r\n        >\r\n          {this.state.icon}{this.state.text}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport ProcessForm from '../Processing/ProcessForm'\r\nimport DrawerToggleButton from '../SideDrawer/DrawerToggleButton';\r\nimport CreateLayerMenu from '../Generation/CreateLayerMenu.js';\r\nimport './Toolbar.css';\r\n\r\nconst toolbar = props => (\r\n  <header className=\"toolbar\">\r\n    <nav className=\"toolbar__navigation\">\r\n        <div className=\"toolbar__toggle-button\">\r\n            <DrawerToggleButton click={props.drawerClickHandler} />\r\n        </div>\r\n        <div className=\"spacer\" />\r\n        <div className=\"toolbar_navigation-items\">\r\n          <CreateLayerMenu \r\n            createLayerMode={props.createLayerMode}\r\n            toggleCreateMode={props.toggleCreateMode}\r\n          />\r\n        </div>\r\n        <div className=\"minispacer\" />\r\n        <div className=\"toolbar_navigation-items\">\r\n              <ProcessForm \r\n                layers={props.layers} \r\n                handleNewFile={props.handleNewFile}\r\n              />\r\n        </div>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default toolbar;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '200px',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component=\"a\" {...props}>\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Inbox\" />\r\n          </ListItem>;\r\n}\r\n\r\nfunction createListItem(layers) {\r\n  var layerItems = layers.map((layer) =>\r\n  <ListItem button>\r\n    <ListItemIcon>\r\n      <Checkbox\r\n      edge=\"start\"\r\n      //checked={checked.indexOf(value) !== -1}\r\n      tabIndex={-1}\r\n      disableRipple\r\n      //inputProps={{ 'aria-labelledby': labelId }}\r\n      />\r\n    </ListItemIcon>\r\n    <ListItemText primary={layer.layer._leaflet_id} />\r\n  </ListItem>  \r\n  );\r\n  return layerItems;\r\n}\r\n\r\n  const SimpleList = (props) => {\r\n\r\n  const classes = useStyles();\r\n  const layers = props.layers;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n        {createListItem(layers)}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SimpleList;\r\n\r\n{/* <ListItem button>\r\n<ListItemIcon>\r\n  <InboxIcon />\r\n</ListItemIcon>\r\n<ListItemText primary=\"Inbox\" />\r\n</ListItem>\r\n<ListItem button>\r\n<ListItemIcon>\r\n  <DraftsIcon />\r\n</ListItemIcon>\r\n<ListItemText primary=\"Drafts\" />\r\n</ListItem>\r\n</List>\r\n<Divider />\r\n<List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n<ListItem button>\r\n<ListItemText primary=\"Trash\" />\r\n</ListItem>\r\n<ListItemLink href=\"#simple-list\">\r\n<ListItemText primary=\"Spam\" />\r\n</ListItemLink> */}\r\n\r\n// const layerListElement = props => {\r\n\r\n//     return (\r\n//       // Try setting `justifyContent` to `center`.\r\n//       // Try setting `flexDirection` to `row`.\r\n//       <nav style={{\r\n//         flex: 1,\r\n//         flexDirection: 'column',\r\n//         justifyContent: 'space-between',\r\n//       }}>\r\n//       <nav style={{width: 50, height: 5, margin: 5, backgroundColor: 'steelblue'}} />\r\n//         <div>\r\n//         </div>\r\n//       </nav>\r\n//     );\r\n//   };","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/Button';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { SliderPicker, AlphaPicker } from 'react-color';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { isTemplateElement } from '@babel/types';\r\n\r\n\r\nconst DisplayDialog = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [newColor, changeColor] = React.useState();\r\n  const [name, changeName] = React.useState();\r\n\r\n  const [newOpacity, changeOpacity] = React.useState();\r\n  \r\n  const handleClickOpen = () => {\r\n    props.onClick()\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    props.onClose()\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    changeName(e.target.value);\r\n  }\r\n\r\n  const handleColorChange = (color) => {\r\n    changeColor(color)\r\n  }\r\n\r\n  const handleOpacityChange = (opacity) => {\r\n    changeOpacity(opacity.rgb.a)\r\n  }\r\n\r\n  const doChanges = () => {\r\n    console.log(name)\r\n    if ((name != \"\") && (name != undefined)) {\r\n      props.item.layer.name = name\r\n    } \r\n    console.log(newColor)\r\n    console.log(props.item.layer.options.style.color)\r\n    if ((newColor != undefined) && (newColor.hex != props.item.layer.options.style.color))  {\r\n      props.item.layer.setStyle({ \r\n        weight: 2,\r\n        dashArray: '',\r\n        fillOpacity: 0.9,\r\n        fillColor: newColor.hex,\r\n        color: newColor.hex\r\n      })\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  let subFields = []\r\n\r\n  for (var i = 0; i < props.subTexts.length; i++) {\r\n    subFields.push(                  \r\n    <div>\r\n      <DialogContentText>\r\n        {props.subTexts[i]}\r\n      </DialogContentText>\r\n      <TextField\r\n      autoFocus\r\n      margin=\"dense\"\r\n      id={i}\r\n      onChange={(i==0) ? e => handleNameChange(e): \"\"}\r\n      fullWidth\r\n    />\r\n    </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n      onClick={handleClickOpen}\r\n    >\r\n      <MoreVertIcon />\r\n    </IconButton>\r\n  {/* <MenuItem onClick={handleClickOpen}>{props.heading}</MenuItem> */}\r\n      <Dialog open={open} \r\n              aria-labelledby=\"form-dialog-title\" \r\n              fullWidth={\"sm\"} \r\n              maxWidth={\"sm\"} \r\n              onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">{props.item.layer.name ? props.item.layer.name: props.item.layer._leaflet_id}</DialogTitle>\r\n        <DialogContent>\r\n          {subFields}\r\n        </DialogContent>\r\n        <div\r\n        style={{paddingTop: '4%',\r\n                marginLeft: '4%',\r\n                marginRight: '4%'\r\n              }}>\r\n        <SliderPicker\r\n          color={newColor}\r\n          onChange={handleColorChange}\r\n        />\r\n        </div>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={doChanges} color=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\nexport default DisplayDialog","import React from 'react';\r\nimport IconButton from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DisplayDialog from '../LayerList/changeDisplay.js';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst MenuListComposition = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  let displayDialog = null;\r\n  const handleToggle = () => {\r\n    setOpen(prevOpen => !prevOpen);\r\n  };\r\n\r\n  const handleClose = event => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  const openDisplayDialog = () => {\r\n    console.log(\"jada\")\r\n    displayDialog = <div><DisplayDialog\r\n              onClick={closeDialog}\r\n              item={props.item}\r\n              heading={\"Change display\"}\r\n              subTexts={[\r\n                \"change layer name\",\r\n                // \"change edgecolor\",\r\n                // \"change edgesize\",\r\n              ]}\r\n            />\r\n            </div>\r\n  }\r\n\r\n  const closeDialog = () => {\r\n    displayDialog = null\r\n  }\r\n\r\n  if (displayDialog != null) {\r\n    return displayDialog\r\n  } else {\r\n    return (\r\n    <div>\r\n    <IconButton\r\n      ref={anchorRef}\r\n      aria-controls={open ? 'menu-list-grow' : undefined}\r\n      aria-haspopup=\"true\"\r\n      onClick={handleToggle}\r\n    >\r\n      <MoreVertIcon />\r\n    </IconButton>\r\n    <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n      {({ TransitionProps, placement }) => (\r\n        <Grow\r\n          {...TransitionProps}\r\n          style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n        >\r\n          <Paper>\r\n            <ClickAwayListener onClickAway={handleClose}>\r\n              <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                <MenuItem onClick={props.onZoomToLayer}>Zoom to layer</MenuItem>\r\n                <MenuItem onClick={props.changeDisplay}>Change layer display</MenuItem>\r\n                <MenuItem onClick={openDisplayDialog}>Change display</MenuItem>\r\n                {/* <DisplayDialog \r\n                  item={props.item}\r\n                  heading={\"Change display\"}\r\n                  subTexts={[\r\n                    \"change fillcolor\",\r\n                    \"change edgecolor\",\r\n                    \"change edgesize\",\r\n                  ]}\r\n                /> */}\r\n\r\n              </MenuList>\r\n            </ClickAwayListener>\r\n          </Paper>\r\n        </Grow>\r\n      )}\r\n    </Popper>\r\n    </div>\r\n    )}\r\n  }\r\n\r\nexport default MenuListComposition;","import React, { Component } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  IconButton,\r\n  ListItemSecondaryAction,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport RootRef from \"@material-ui/core/RootRef\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ContextMenu from '../CustomContext/ContextMenu.js';\r\nimport DisplayDialog from './changeDisplay.js';\r\nimport { border } from \"@material-ui/system\";\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle,\r\n\r\n  ...(isDragging && {\r\n    background: \"rgb(235,235,235)\",\r\n    borderRadius: \"8px\",\r\n  })\r\n});\r\n\r\nconst getliStyle = (isDraggingOver, item) => ({\r\n  border: isDraggingOver ? '' : 'solid',\r\n  margin: \"0 0 5px 0\",\r\n  borderRadius: \"8px\",\r\n  //borderColor: item.layer.options.style.color\r\n  //backgroundColor: isDraggingOver ? '' : item.layer.options.style.color,\r\n});\r\n\r\nconst getulStyle = (isDraggingOver, item) => ({\r\n  backgroundColor: isDraggingOver ? '' : item.layer.options.style.color,\r\n});\r\n\r\n\r\n\r\n\r\n\r\nclass LayerList extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: props.layers,\r\n      selectedIndex: null,\r\n      displayDialog: null,\r\n      disableDrag: false\r\n    };\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // document.addEventListener('contextmenu', function(event){\r\n    //   event.preventDefault();\r\n    // }); \r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Typical usage (don't forget to compare props):\r\n    if (this.props.layers !== prevProps.layers) {\r\n\r\n      this.setState({\r\n        items: this.props.layers\r\n      });      \r\n    }\r\n  }\r\n\r\n  onZoomToLayer = (item) => {\r\n    console.log(\"yiagkdajøgaskdgøasdk\")\r\n  }\r\n\r\n  changeDisplay = (item) => {\r\n\r\n  }\r\n\r\n  changeName = (item) => {\r\n    \r\n  }\r\n\r\n  onDragEnd(result) {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      this.state.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    //reorders the props\r\n    this.props.orderLayers(items);\r\n    this.setState({\r\n      items: items\r\n    });\r\n  }\r\n\r\n   rightClick(e) {\r\n    console.log(\"RIGHT CLICK BABY \")\r\n  }\r\n\r\n\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n  render() {\r\n    let visibility = <VisibilityIcon/>\r\n    let visibilityOff = <VisibilityOffIcon/>\r\n\r\n      return (\r\n      \r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided, snapshot) => (\r\n            <RootRef rootRef={provided.innerRef}>\r\n              <Paper style={{maxHeight: \"75vh\", overflow: 'auto'}}>\r\n                <List >\r\n                  {this.props.layers.map((item, index) => (\r\n                    <li key={item.layer._} style={getliStyle(snapshot.isDraggingOver, item)}>\r\n                      <Draggable key={item.layer._leaflet_id} draggableId={item.layer._leaflet_id} index={index}>\r\n                        {(provided, snapshot) => (\r\n                          <ListItem \r\n                            selected={this.props.selectedIndex === index}\r\n                            onClick={event => this.props.handleListItemClick(event, index)}\r\n                            onContextMenu={this.rightClick}\r\n                            ContainerComponent=\"li\"\r\n                            ContainerProps={{ ref: provided.innerRef }}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            style={this.state.disableDrag ? console.log() : getItemStyle(\r\n                              snapshot.isDragging,\r\n                              provided.draggableProps.style\r\n                            )}\r\n                          >\r\n                            {/* <ul style={getulStyle(snapshot.isDraggingOver, item)}> */}\r\n                              <ListItemText \r\n                                primary={item.layer.name ? item.layer.name: item.layer._leaflet_id}\r\n                                //secondary={item.layer._leaflet_id}\r\n                              />\r\n                            {/* </ul> */}\r\n                            <ListItemIcon />\r\n                            <ListItemIcon />\r\n\r\n                            <ListItemIcon>\r\n                              <IconButton id={item.layer._leaflet_id} onClick={() => this.props.toggleVisibility(item.layer)}>\r\n                                {item.layer.visibility ? visibility: visibilityOff}\r\n                              </IconButton>\r\n                            </ListItemIcon>\r\n                            <IconButton id={item.layer._leaflet_id} onClick={() => this.props.onDelete(item.layer._leaflet_id )}>\r\n                              <DeleteIcon />\r\n                            </IconButton>\r\n                            <div style={{\r\n                              zIndex: '800'}}>\r\n                            <DisplayDialog\r\n                              onClick={() => this.state.disableDrag = true}  \r\n                              onClose={() => this.state.disableDrag = false}                 \r\n                              item={item}\r\n                              heading={\"Change display\"}\r\n                              subTexts={[\r\n                                \"Change layer name\",\r\n                                //\"Change edgecolor\",\r\n                                // \"Change edgesize\",\r\n                              ]}  \r\n                                />\r\n                              </div>\r\n                            {/* <IconButton>\r\n                              <MoreVertIcon onClick={this.setState({moreOptions: item})}/>\r\n                            </IconButton> */}\r\n                            <ListItemSecondaryAction/>\r\n                          </ListItem>\r\n                        )}\r\n                      </Draggable>\r\n                    </li>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </List>\r\n              </Paper>\r\n            </RootRef>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default LayerList;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => (\r\n    <div className=\"backdrop\" onClick={props.click} />\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport styled from 'styled-components';\r\nimport { create } from 'domain';\r\n\r\nconst Wrapper = styled.div`\r\n    width: ${props => props.width};\r\n    height: ${props => props.height}; \r\n`;\r\n\r\nfunction createPopup(feature, layer) {\r\n\t// does this feature have a property named popupContent?\r\n\tif (feature.properties && feature.properties.name) {\r\n\t\tlayer.bindPopup(feature.properties.name);\r\n\t}\r\n}\r\n\r\nexport default class Map extends React.Component {\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  state = {\r\n    file: this.props.file,\r\n    createLayerMode: this.props.createLayerMode,\r\n    createdLayer: null,\r\n  }\r\n\r\n  \r\n\r\n  componentDidMount = () => {\r\n    this.map = L.map('map', {\r\n        center: [40.7292369,-73.996565],\r\n        zoom: 13,\r\n        zoomControl: false,\r\n        layers: L.tileLayer('https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}{r}.png', {\r\n          // 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png?'\r\n                  detectRetina: true,\r\n                  maxZoom: 20,\r\n                  maxNativeZoom: 17,\r\n        }),\r\n    });\r\n    this.map.on('layeradd', this.props.addLayer);\r\n    this.map.on('click', this.props.clickCreateLayer)\r\n  }\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n\r\n    try {\r\n\r\n      \r\n      //If createlayermode just swapped to false or clickedpoints length just swapped to zero.\r\n    if (((prevProps.createLayerMode != false) && (this.props.createLayerMode == false)) || ((prevProps.clickedPoints.length != 0) && (this.props.clickedPoints.length == 0))) {\r\n      \r\n      this.map.removeLayer(this.state.layer)\r\n\r\n      //reversing coordinates to make them geojson order.\r\n      let coordinates = prevProps.clickedPoints\r\n      coordinates.forEach(latlng => {\r\n        latlng.reverse();\r\n      });\r\n\r\n      if(prevProps.createLayerMode == \"Polygon\") {\r\n        console.log(\"change the rules\")\r\n        coordinates = [...coordinates, coordinates[0]]\r\n        coordinates = [coordinates]\r\n      }\r\n\r\n      this.createLayer(\r\n              {\r\n                \"type\": \"Feature\",\r\n                \"name\": \"Created \" + prevProps.createLayerMode,\r\n                \"geometry\": {\r\n                    \"type\": prevProps.createLayerMode,\r\n                    \"coordinates\": coordinates,\r\n                },\r\n              }\r\n      )\r\n\r\n      this.setState({\r\n        layer: null,\r\n      })\r\n      return\r\n    }\r\n  } catch {console.log(\"nevermind\")}\r\n\r\n    //Add new points\r\n    //If new points was added: or layermode was changed\r\n    if ((this.props.clickedPoints.length != prevProps.clickedPoints.length) || (this.props.createLayerMode != prevProps.createLayerMode)) {\r\n       if (this.state.layer != null) {\r\n        this.map.removeLayer(this.state.layer)\r\n      }\r\n      let newLayer;\r\n      if (this.props.createLayerMode == \"LineString\") {\r\n        newLayer = L.polyline(this.props.clickedPoints, {color: 'green'}).addTo(this.map);\r\n      } else if (this.props.createLayerMode == \"Polygon\") {\r\n        newLayer = L.polygon(this.props.clickedPoints, {color: 'green'}).addTo(this.map);\r\n      }\r\n      // } else if (this.props.createLayerMode == \"MultiPoint\") {\r\n      //   newLayer = L.polyline(this.props.clickedPoints, {color: 'red'}).addTo(this.map);\r\n      // } \r\n\r\n      this.setState({\r\n        layer: newLayer,\r\n      })  \r\n    }\r\n\r\n    //Create file from new imported geojson\r\n    if (this.props.file) {\r\n      this.createLayer(this.props.file);\r\n      this.props.resetFile();\r\n    }\r\n    //Remove the requested file\r\n    else if (this.props.deletedLayer) {\r\n      console.log(this.props.deletedLayer)\r\n      this.map.removeLayer(this.props.deletedLayer)\r\n      this.props.resetFile();\r\n    }\r\n    //hide the layer L by removing it from the map\r\n    else if (this.props.hide) {\r\n      console.log(this.props.hide)\r\n      this.map.removeLayer(this.props.hide)\r\n      this.props.resetFile();\r\n    }\r\n    //unhide the layer L by re-adding it to the map\r\n    else if (this.props.unhide) {\r\n      this.props.unhide.addTo(this.map)\r\n      this.map.addLayer(this.props.unhide)\r\n      this.props.resetFile();\r\n    }\r\n    else if (this.props.zoomTo.length != 0) {\r\n      try {\r\n        return this.map.fitBounds(this.props.zoomTo[0].layer.getBounds())\r\n      } catch {}\r\n      this.props.resetZoom()\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  zoomToFeature = (e) => {\r\n    try { \r\n      console.log(e)\r\n      return (e.layer ? this.map.fitBounds(e.target.getBounds()): \"$10.00\");\r\n    } catch {\r\n      \r\n    }\r\n  }\r\n\r\n  onEachFeature = (e) => {\r\n    this.map.on({\r\n      click: this.props.hideLayer,\r\n    })\r\n  }\r\n\r\n    //Creating a new layer from geojson-data\r\n  createLayer = (geojsonData) => {\r\n\r\n    console.log(\"creating a geojsonlayer\")\r\n    let geoj = L.geoJSON(geojsonData, {\r\n      pointToLayer: function (feature, latlng) {\r\n          return L.circleMarker(latlng, {\r\n            radius: 5,\r\n            fillColor: \"#ff7800\",\r\n            color: \"#000\",\r\n            weight: 1,\r\n            opacity: 1,\r\n            fillOpacity: 0.9,\r\n          });\r\n      },\r\n      style: {color: '#'+Math.floor(Math.random()*16777215).toString(16), fillOpacity: 0.9},\r\n      onEachFeature: this.onEachFeature,\r\n      }).addTo(this.map);\r\n\r\n    geoj.name = geojsonData.name;\r\n    geoj.type = geojsonData.type;\r\n    geoj.visibility = true\r\n    geoj.setZIndex(-800);\r\n    geoj.bindPopup(\"part of: \" + geojsonData.name);\r\n    geoj.on({\r\n    //  mouseover: this.props.highlightFeature,\r\n    //  mouseout: this.props.resetHighlight,\r\n      click: this.zoomToFeature\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return <Wrapper width=\"100%\" height=\"100%\" id='map' />\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass DragAndDrop extends Component {\r\n  state = {\r\n    drag: false\r\n  }\r\n  \r\n  dropRef = React.createRef()\r\n  handleDrag = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n  }\r\n\r\n  handleDragIn = (e) => {\r\n    console.log(\"INSIDE\");\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    this.dragCounter++\r\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n      this.setState({drag: true})\r\n    }\r\n  }\r\n  handleDragOut = (e) => {\r\n    console.log(\"left\");\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    this.dragCounter--\r\n    if (this.dragCounter === 0) {\r\n      this.setState({drag: false})\r\n    }\r\n  }\r\n  handleDrop = (e) => {\r\n    console.log(e);\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    this.setState({drag: false})\r\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n      this.props.handleDrop(e.dataTransfer.files)\r\n      e.dataTransfer.clearData()\r\n      this.dragCounter = 0    \r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let div = this.dropRef.current\r\n    div.addEventListener('dragenter', this.handleDragIn)\r\n    div.addEventListener('dragleave', this.handleDragOut)\r\n    div.addEventListener('dragover', this.handleDrag)\r\n    div.addEventListener('drop', this.handleDrop)\r\n  }\r\n  componentWillUnmount() {\r\n    let div = this.dropRef.current\r\n    div.removeEventListener('dragenter', this.handleDragIn)\r\n    div.removeEventListener('dragleave', this.handleDragOut)\r\n    div.removeEventListener('dragover', this.handleDrag)\r\n    div.removeEventListener('drop', this.handleDrop)\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{display: 'inline-block', position: 'relative'}}\r\n        ref={this.dropRef}\r\n      >\r\n        {this.state.dragging &&\r\n          <div \r\n            style={{\r\n              border: 'dashed grey 4px',\r\n              backgroundColor: 'rgba(100,100,255,.8)',\r\n              position: 'absolute',\r\n              top: 0,\r\n              bottom: 0,\r\n              left: 0, \r\n              right: 0,\r\n              zIndex: 9999\r\n            }}\r\n          >\r\n            <div \r\n              style={{\r\n                position: 'absolute',\r\n                top: '50%',\r\n                right: 0,\r\n                left: 0,\r\n                textAlign: 'center',\r\n                color: 'grey',\r\n                fontSize: 36\r\n              }}\r\n            >\r\n              <div>drop here :)</div>\r\n            </div>\r\n          </div>\r\n        }\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default DragAndDrop","import PublishIcon from '@material-ui/icons/Publish';\r\nimport React, { Component, useCallback } from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\n\r\nfunction MyDropzone(props) {\r\n    const onDrop = useCallback(acceptedFiles => {  \r\n     \r\n         acceptedFiles.forEach((file) => {\r\n           const reader = new FileReader()\r\n           reader.onabort = () => console.log('file reading was aborted')\r\n           reader.onerror = () => console.log('file reading has failed')\r\n           reader.onload = () => {\r\n             // Do whatever you want with the file contents\r\n             const binaryStr = reader.result\r\n             let jsonLayer = JSON.parse(binaryStr)\r\n             props.handleNewFile(jsonLayer);\r\n             console.log(jsonLayer);\r\n           }\r\n           reader.readAsBinaryString(file)\r\n         })\r\n       }, []);\r\n   \r\n     const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n   \r\n       return (\r\n         <div {...getRootProps()}>\r\n           <input {...getInputProps()} />\r\n           {\r\n             isDragActive ?\r\n              <p style={{height: \"75px\",  position: \"flex\", textAlign: \"center\", border: \"dashed\", borderRadius: \"8px\", boxShadow: \"10\", background: \"lightgreen\"}}><PublishIcon /></p>:\r\n              <div>\r\n               <p style={{height: \"75px\", position: \"flex\", textAlign: \"center\", borderRadius: \"8px\", border: \"dashed\"}}><PublishIcon /><p>Click or drag to add files!</p></p>\r\n               \r\n              </div>\r\n           }\r\n         </div>\r\n       )\r\n     }\r\n\r\nexport default MyDropzone;","import React, { Component, useCallback } from 'react';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport Map from './Map/index';\nimport LayerList from './components/LayerList/LayerList.js';\nimport DragAndDrop from './components/DragAndDrop.js';\nimport Dropzone from 'react-dropzone';\nimport { Resizable, ResizableBox } from 'react-resizable';\nimport { colors, Hidden } from '@material-ui/core';\nimport { textAlign } from '@material-ui/system';\nimport MyDropzone from './components/DropZone.js';\nimport SimpleSnackbar from './components/Processing/Snackbar.js';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.orderLayers = this.orderLayers.bind(this)\n    this.addLayer = this.addLayer.bind(this)\n    this.handleNewFile = this.handleNewFile.bind(this);\n  }\n\n  state = {\n    sideDrawerOpen: true,  \n    layers: [],\n    selectedIndex: null,\n    file: null,\n    deletedLayers: [],\n    deletedLayer: null, \n    hide: null,\n    unhide: null,\n    zoomTo: [],\n    createLayerMode: false,\n    clickedPoints: [],\n    // createdLayer: null,\n  }\n\n  componentDidUpdate = () => {\n    console.log(this.state.layers)\n  }\n\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return {sideDrawerOpen: !prevState.sideDrawerOpen};\n    });\n  };\n\n  toggleCreateMode = (event) => {\n    if ((event == false) || (event == \"quit\")) {\n      this.setState({\n        createLayerMode: event,\n        clickedPoints: [],\n      })\n    } else if (event == \"reset\") {\n      this.setState({\n        clickedPoints: []\n      })\n    } else {\n      this.setState({\n        createLayerMode: event,\n      })\n    }\n  }\n\n  openGeoProcess = () => {}\n\n  backdropClickHandler = () => {\n    this.setState({sideDrawerOpen: false});\n  };\n\n  handleNewFile = (file) => {\n    this.setState({\n      file: file\n    });  \n  }\n\n  handleListItemClick = (event, index) => {\n    this.setState({\n      selectedIndex: index,\n      zoomTo: [this.state.layers[index]],\n    });\n\n    try {\n      console.log(this.state.layers[index].layer.name);\n    } catch {\n      console.log(\"could not find name\");\n    }\n\n  };\n\n\n\n\n  handleDelete = itemId => {\n    \n    try {\n      //Finds the layer we are going to delete\n      let layerToDelete = this.state.layers.filter(l => l.layer._leaflet_id == itemId)[0]\n\n      // Save the deleted layer so you can undo it later;\n      // updates the new state... Does not add the layer...\n      this.state.deletedLayers.push(layerToDelete)\n      console.log(layerToDelete.layer._leaflet_id)\n      this.setState({\n        deletedLayer: layerToDelete.layer,\n        layers: this.state.layers.filter(l => l.layer._leaflet_id !== itemId)\n      });\n    } catch {\n      alert('could not remove the layer');\n    }\n  };\n\n  orderLayers(newLayers) {\n    this.setState({\n       layers: newLayers\n    })\n    for (var i = 0; i < this.state.layers.length;  i++) {\n\n    }\n  };\n\n\n  addLayer = (layer) => {\n    //Checks if the layer exists from before\n    let existingLayer = this.state.layers.find(l => l.layer._leaflet_id == layer.layer._leaflet_id)\n    if (layer.layer._layers && !layer.layer._svgSize && existingLayer == undefined) {\n      //this.state.layers.push(layer);\n      this.setState({\n        layers: [...this.state.layers, layer],\n      })\n      layer.key = layer.layer._leaflet_id\n    } \n  }\n\n  clickCreateLayer = (e) => {\n    if (this.state.createLayerMode != false) {\n      this.setState({\n        clickedPoints: [...this.state.clickedPoints, [e.latlng.lat, e.latlng.lng]]\n      })\n      console.log(this.state.clickedPoints)\n    } \n  }\n\n\n\n//Leaflet functions for passing on to layerlist\n  resetHighlight = (e) => {\n    e.target.setStyle({\n      weight: 1,\n      dashArray: '',\n      fillOpacity: 0.4\n    });\n  }\n\n  zoomToLayer = (e) => {\n    this.setState({\n      zoomTo: e\n    })\n  }\n\n  resetZoom = () => {\n    this.setState({\n      zoomTo: [],\n    })\n  }\n\n  toggleVisibility = (e) => {\n    console.log(e)\n    if (e.visibility) {\n      this.setState({\n        hide: e\n      })\n    } else {\n      this.setState({\n        unhide: e\n      })\n    }\n    e.visibility = !e.visibility\n  }\n\n  resetFile = () => {\n    this.setState({\n      file: null,\n      deletedLayer: null,\n      hide: null,\n      unhide: null,\n   })  \n  }\n  \n  \n  highlightFeature = (e) => {\n    console.log(e)\n    e.target.setStyle({\n      weight: 2,\n      dashArray: '',\n      fillOpacity: 0.6\n    });\n  }\n  \n  selectLayer = (id) => {\n\n  }\n\n\n  render() {\n    let backdrop;\n    if (this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler} />\n    }\n    return (\n      <div style={{\n        height: '100%',\n        width: '100%'}}>\n        <div style={{\n          height: '100vh - 46px',\n          width: '19.5vw',\n          position: 'absolute',\n          marginTop: \"46px\",\n          marginLeft: \"0.1vw\",\n          }}>\n          <MyDropzone \n            handleNewFile={this.handleNewFile}  \n          />\n          <LayerList \n          handleListItemClick={this.handleListItemClick} \n          selectedIndex={this.state.selectedIndex}\n          layers={this.state.layers} \n          orderLayers={this.orderLayers} \n          onDelete={this.handleDelete}\n          toggleVisibility={this.toggleVisibility}\n          zoomTo={this.state.zoomTo}\n          />\n\n                    \n        </div>\n        <Toolbar \n        drawerClickHandler={this.drawerToggleClickHandler} \n        layers={this.state.layers}\n        handleNewFile={this.handleNewFile}\n        toggleCreateMode={this.toggleCreateMode}\n        createLayerMode={this.state.createLayerMode}\n        />\n        <main style={{marginLeft: '20vw', height: '100vh', width: '80vw', overflow: 'auto', zIndex: \"-1999\"}}>\n          <Map  \n            addLayer={this.addLayer}\n            // createLayer={this.clickCreateMode}\n            highlightFeature={this.highlightFeature}\n            resetHighlight={this.resetHighlight}\n            selectLayer={this.selectLayer}\n            file={this.state.file}\n            resetFile={this.resetFile}\n            layers={this.state.layers}\n            deletedLayers={this.state.deletedLayers}\n            deletedLayer={this.state.deletedLayer}\n            toggleVisibility={this.toggleVisibility}\n            hide={this.state.hide}\n            unhide={this.state.unhide}\n            zoomTo={this.state.zoomTo}\n            resetZoom={this.resetZoom}\n            createLayerMode={this.state.createLayerMode}\n            clickCreateLayer={this.clickCreateLayer}\n            clickedPoints={this.state.clickedPoints}\n            // createdLayer={this.state.createdLayer}\n          />\n          </main>\n\n        {/*\n        {//backdrop}\n        }\n        <SideDrawer layers={this.state.layers} show={this.state.sideDrawerOpen} />\n */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}